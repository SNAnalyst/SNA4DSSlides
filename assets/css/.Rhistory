system.time(
mod1 <- ergm::ergm(
Net ~ edges + mutual + ostar(2:3) + transitiveties
+ edgecov("reportsto")
+ nodeicov("Tenure") + nodeocov("Tenure") +
absdiff("Tenure")
+ nodeicov("Age") + nodeocov("Age") + absdiff("Age"),
control = control.ergm(
MCMC.samplesize = 5000,
MCMC.burnin = 10000,
MCMLE.maxit = 10
),
verbose = TRUE
)
)
system.time(
mod1 <- ergm::ergm(
Net ~ edges + mutual + ostar(2:3) + transitiveties
+ edgecov("reportsto")
+ nodeicov("Tenure") + nodeocov("Tenure") +
absdiff("Tenure")
+ nodeicov("Age") + nodeocov("Age") + absdiff("Age"),
ergm::control = control.ergm(
MCMC.samplesize = 5000,
MCMC.burnin = 10000,
MCMLE.maxit = 10
),
verbose = TRUE
)
)
system.time(
mod1 <- ergm::ergm(
Net ~ edges + mutual + ostar(2:3) + transitiveties
+ edgecov("reportsto")
+ nodeicov("Tenure") + nodeocov("Tenure") +
absdiff("Tenure")
+ nodeicov("Age") + nodeocov("Age") + absdiff("Age"),
ergm::control = control.ergm(
MCMC.samplesize = 5000,
MCMC.burnin = 10000,
MCMLE.maxit = 10
),
verbose = TRUE
)
)
system.time(
mod1 <- ergm::ergm(
Net ~ edges + mutual + ostar(2:3) + transitiveties
+ edgecov("reportsto")
+ nodeicov("Tenure") + nodeocov("Tenure") +
absdiff("Tenure")
+ nodeicov("Age") + nodeocov("Age") + absdiff("Age"),
control = ergm::control.ergm(
MCMC.samplesize = 5000,
MCMC.burnin = 10000,
MCMLE.maxit = 10
),
verbose = TRUE
)
)
# p60
set.seed(510)
system.time(
mod0 <- ergm::ergm(
Net ~ edges + nodematch("Level"),
control = ergm::control.ergm(
MCMC.samplesize = 5000,
MCMC.burnin = 10000,
MCMLE.maxit = 10
),
verbose = TRUE
)
)
summary(mod0)
btergm::interpret(mod0, type = "dyad", i = 1, j = 2)
?btergm::interpret(mod0, type = "dyad", i = 1, j = 2)
btergm::interpret(mod0, type = "type", i = 1, j = 2)
btergm::interpret(mod0, type = "tie", i = 1, j = 2)
0.2498583 + 0.2620465
?ergm
############ CH 4
data("Hookups", "ina")
############ CH 4
data("Hookups", package = "ina")
############ CH 4
data("Hookups", package = "ina")
Hookups
library(network)
Hookups
set.seed(5)
m0 <- ergm(Hookups ~ edges
# people hookup within approximate age group
+ absdiff("birthyear")
# younger people are more likely to hookup
+ nodecov("birthyear")
# people are less likely to hookup within their working              unit
+ nodematch("position")
# people prefer to hookup within their racial group
+ nodematch("race")
# people prefer to hookup with members of the opposite sex
# (negative effect))
+ nodematch("sex")
# earlier characters form more ties
+ nodecov("season"))
m0 <- ergm::ergm(Hookups ~ edges
# people hookup within approximate age group
+ absdiff("birthyear")
# younger people are more likely to hookup
+ nodecov("birthyear")
# people are less likely to hookup within their working              unit
+ nodematch("position")
# people prefer to hookup within their racial group
+ nodematch("race")
# people prefer to hookup with members of the opposite sex
# (negative effect))
+ nodematch("sex")
# earlier characters form more ties
+ nodecov("season"))
summary(m0)
m0 <- ergm::ergm(Hookups ~ edges
# people hookup within approximate age group
+ absdiff("birthyear")
# younger people are more likely to hookup
+ nodecov("birthyear")
# people are less likely to hookup within their working              unit
+ nodematch("position")
# people prefer to hookup within their racial group
+ nodemix("race")
# people prefer to hookup with members of the opposite sex
# (negative effect))
+ nodematch("sex")
# earlier characters form more ties
+ nodecov("season"))
summary(m0)
m0 <- ergm::ergm(Hookups ~ edges
# people hookup within approximate age group
+ absdiff("birthyear")
# younger people are more likely to hookup
+ nodecov("birthyear")
# people are less likely to hookup within their working              unit
+ nodematch("position")
# people prefer to hookup within their racial group
+ nodematch("race")
# people prefer to hookup with members of the opposite sex
# (negative effect))
+ nodemix("sex")
# earlier characters form more ties
+ nodecov("season"))
summary(m0)
m0 <- ergm::ergm(Hookups ~ edges
# people hookup within approximate age group
+ absdiff("birthyear")
# younger people are more likely to hookup
+ nodecov("birthyear")
# people are less likely to hookup within their working              unit
+ nodematch("position")
# people prefer to hookup within their racial group
+ nodematch("race")
# people prefer to hookup with members of the opposite sex
# (negative effect))
+ nodematch("sex")
# earlier characters form more ties
+ nodecov("season"))
summary(m0)
rdrop2::drop_search("Finkelstein")
zoek <- rdrop2::drop_search("Finkelstein")
lapply(zoek[[1]], \(x) x$metadata$name)
sapply(zoek[[1]], \(x) x$metadata$name)
stringr::str_detect(sapply(zoek[[1]], \(x) x$metadata$name), "\\:")
stringr::str_detect(sapply(zoek[[1]], \(x) x$metadata$name), "[\\:]")
stringr::str_detect(sapply(zoek[[1]], \(x) x$metadata$name), "[\\:\\?]")
stringr::str_detect(sapply(zoek[[1]], \(x) x$metadata$name), "[\\:\\?]") |> which()
waar <- stringr::str_detect(sapply(zoek[[1]], \(x) x$metadata$name), "[\\:\\?]") |> which()
zoek[[1]][waar]
set.seed(5)
plot(hookups, vertex.col=c("blue", "pink")[
1+(get.vertex.attribute(hookups, "sex")=="F")],
label=get.vertex.attribute(hookups, "name"), label.cex=.75)
plot(Hookups, vertex.col=c("blue", "pink")[
1+(get.vertex.attribute(hookups, "sex")=="F")],
label=get.vertex.attribute(hookups, "name"), label.cex=.75)
plot(Hookups, vertex.col=c("blue", "pink")[
1+(get.vertex.attribute(Hookups, "sex")=="F")],
label=get.vertex.attribute(Hookups, "name"), label.cex=.75)
set.seed(510)
m1 <- ergm(Hookups ~ edges
# people hookup within approximate age group
+ absdiff("birthyear")
# younger people are more likely to hookup
+ nodecov("birthyear")
# people are less likely to hookup within their working              unit
+ nodematch("position")
# people prefer to hookup within their racial group
+ nodematch("race")
# people prefer to hookup with members of the opposite sex
# (negative effect))
+ nodematch("sex")
# earlier characters form more ties
+ nodecov("season")
# tendency for monogamy
+ degree(1)
# tendency for cliquishness; also works well with
# gwesp(1, fixed=TRUE)
+ gwdsp(1, fixed=TRUE),
control=control.ergm(
MCMC.samplesize=5000,
MCMC.burnin=5000,
MCMLE.maxit=10))
m1 <- ergm::ergm(Hookups ~ edges
# people hookup within approximate age group
+ absdiff("birthyear")
# younger people are more likely to hookup
+ nodecov("birthyear")
# people are less likely to hookup within their working              unit
+ nodematch("position")
# people prefer to hookup within their racial group
+ nodematch("race")
# people prefer to hookup with members of the opposite sex
# (negative effect))
+ nodematch("sex")
# earlier characters form more ties
+ nodecov("season")
# tendency for monogamy
+ degree(1)
# tendency for cliquishness; also works well with
# gwesp(1, fixed=TRUE)
+ gwdsp(1, fixed=TRUE),
control = ergm::control.ergm(
MCMC.samplesize=5000,
MCMC.burnin=5000,
MCMLE.maxit=10))
?ergm::`ergm-terms`
summary(m1)
g1 <- gof(m1)
g1 <- ergm::gof(m1)
par(mfrow=c(2, 2))
plot(g1)
m1 <- ergm::ergm(Hookups ~ edges
# people hookup within approximate age group
+ absdiff("birthyear")
# younger people are more likely to hookup
+ nodecov("birthyear")
# people are less likely to hookup within their working              unit
+ nodematch("position")
# people prefer to hookup within their racial group
+ nodematch("race")
# people prefer to hookup with members of the opposite sex
# (negative effect))
+ nodematch("sex")
# earlier characters form more ties
+ nodecov("season")
# tendency for monogamy
+ degree(1)
# tendency for cliquishness; also works well with
# gwesp(1, fixed=TRUE)
+ gwdsp(1, fixed=TRUE),
+kstar(2)
control = ergm::control.ergm(
MCMC.samplesize=5000,
MCMC.burnin=5000,
MCMLE.maxit=10))
m1 <- ergm::ergm(Hookups ~ edges
# people hookup within approximate age group
+ absdiff("birthyear")
# younger people are more likely to hookup
+ nodecov("birthyear")
# people are less likely to hookup within their working              unit
+ nodematch("position")
# people prefer to hookup within their racial group
+ nodematch("race")
# people prefer to hookup with members of the opposite sex
# (negative effect))
+ nodematch("sex")
# earlier characters form more ties
+ nodecov("season")
# tendency for monogamy
+ degree(1)
# tendency for cliquishness; also works well with
# gwesp(1, fixed=TRUE)
+ gwdsp(1, fixed=TRUE),
+kstar(2),
control = ergm::control.ergm(
MCMC.samplesize=5000,
MCMC.burnin=5000,
MCMLE.maxit=10))
m1 <- ergm::ergm(Hookups ~ edges
# people hookup within approximate age group
+ absdiff("birthyear")
# younger people are more likely to hookup
+ nodecov("birthyear")
# people are less likely to hookup within their working              unit
+ nodematch("position")
# people prefer to hookup within their racial group
+ nodematch("race")
# people prefer to hookup with members of the opposite sex
# (negative effect))
+ nodematch("sex")
# earlier characters form more ties
+ nodecov("season")
# tendency for monogamy
+ degree(1)
# tendency for cliquishness; also works well with
# gwesp(1, fixed=TRUE)
+ gwdsp(1, fixed=TRUE)
+ kstar(2),
control = ergm::control.ergm(
MCMC.samplesize=5000,
MCMC.burnin=5000,
MCMLE.maxit=10))
g1 <- ergm::gof(m1)
par(mfrow=c(2, 2))
plot(g1)
m1 <- ergm::ergm(Hookups ~ edges
# people hookup within approximate age group
+ absdiff("birthyear")
# younger people are more likely to hookup
+ nodecov("birthyear")
# people are less likely to hookup within their working              unit
+ nodematch("position")
# people prefer to hookup within their racial group
+ nodematch("race")
# people prefer to hookup with members of the opposite sex
# (negative effect))
+ nodematch("sex")
# earlier characters form more ties
+ nodecov("season")
# tendency for monogamy
+ degree(1)
# tendency for cliquishness; also works well with
# gwesp(1, fixed=TRUE)
+ gwdsp(1, fixed=TRUE)
+ kstar(2) + kcycle(4),
control = ergm::control.ergm(
MCMC.samplesize=5000,
MCMC.burnin=5000,
MCMLE.maxit=10))
m1 <- ergm::ergm(Hookups ~ edges
# people hookup within approximate age group
+ absdiff("birthyear")
# younger people are more likely to hookup
+ nodecov("birthyear")
# people are less likely to hookup within their working              unit
+ nodematch("position")
# people prefer to hookup within their racial group
+ nodematch("race")
# people prefer to hookup with members of the opposite sex
# (negative effect))
+ nodematch("sex")
# earlier characters form more ties
+ nodecov("season")
# tendency for monogamy
+ degree(1)
# tendency for cliquishness; also works well with
# gwesp(1, fixed=TRUE)
+ gwdsp(1, fixed=TRUE)
+ kstar(2) + cycle(4),
control = ergm::control.ergm(
MCMC.samplesize=5000,
MCMC.burnin=5000,
MCMLE.maxit=10))
g1 <- ergm::gof(m1)
par(mfrow=c(2, 2))
plot(g1)
plot(g1)
summary(m1)
zoek <- rdrop2::drop_search("Hambrick")
waar <- stringr::str_detect(sapply(zoek[[1]], \(x) x$metadata$name), "[\\:\\?]") |> which()
zoek[[1]][waar]
###################################################################
### Chapter 5
data(Senate)
###################################################################
### Chapter 5
data(Senate, package = "ina")
## replicable plot
set.seed(2345)
## write outside the line
## define colors
cols <- colorRamps::blue2red(10)[rank(network::get.vertex.attribute(Senate,"ideol"))]
## Simple Plot
## Nice package for creating color spectra
# library(colorRamps)
install.packages("colorRamps")
## write outside the line
## define colors
cols <- colorRamps::blue2red(10)[rank(network::get.vertex.attribute(Senate,"ideol"))]
network::plot(Senate, displaylabels=TRUE, vertex.col=cols,
19 edge.col="grey50", xpd=TRUE)
plot(Senate, displaylabels=TRUE, vertex.col=cols,
19 edge.col="grey50", xpd=TRUE)
plot(Senate, displaylabels=TRUE, vertex.col=cols,
edge.col="grey50", xpd=TRUE)
## write outside the line
## define colors
par(mfrow = c(1,1))
cols <- colorRamps::blue2red(10)[rank(network::get.vertex.attribute(Senate,"ideol"))]
plot(Senate, displaylabels=TRUE, vertex.col=cols,
edge.col="grey50", xpd=TRUE)
set.seed(45)
## edges for density
## absdiff to model ideological homophily
## edgecov to model effect of geographic distance between states
## istar(2), in-two-stars, to model popularity
est2 <- ergm::ergm(Senate ~ edges + absdiff("ideol") +
edgecov("dist") + istar(2))
## See if the MCMLE Converged
mcmc.diagnostics(est2)
## See if the MCMLE Converged
ergm::mcmc.diagnostics(est2)
summary(gf.degeneracy)
ergm::summary(gf.degeneracy)
ergm::summary.gof(gf.degeneracy)
summary(gf.degeneracy)
## See if it’s degenerate
gf.degeneracy <- ergm::gof(est2, GOF=~model)
summary(gf.degeneracy)
ergm::summary.gof(gf.degeneracy)
class(gf.degeneracy)
ergm::summary.gof.ergm(gf.degeneracy)
ergm:::summary.gof.ergm(gf.degeneracy)
summary.gof.ergm(gf.degeneracy)
summary.gof(gf.degeneracy)
ergm:::summary.gof(gf.degeneracy)
est2
## See if the MCMLE Converged
ergm::mcmc.diagnostics(est2)
ergm:::summary.gof(gf.degeneracy)
ergm:::summary.gof.ergm(gf.degeneracy)
ergm::summary.gof.ergm(gf.degeneracy)
ergm::summary.gof(gf.degeneracy)
ergm::print.gof(gf.degeneracy)
ergm:::print.gof(gf.degeneracy)
gf.degeneracy
## How does it fit?
gf2 <- ergm::gof(est2)
## Make a panel of four plots
par(mfrow=c(2, 2))
## plot goodness of fit results
plot(gf2)
## plot goodness of fit results
plot(gf2)
## Make a panel of four plots
par(mfrow=c(2, 2))
## plot goodness of fit results
plot(gf2)
## plot goodness of fit results
plot(gf2)
plot(1, 1)
## Make a panel of four plots
par(mfrow=c(2, 2))
## plot goodness of fit results
plot(gf2)
## plot goodness of fit results
plot(1, 1)
## plot goodness of fit results
plot(1, 1)
## plot goodness of fit results
plot(1, 1)
## plot goodness of fit results
plot(gf2)
## Make a panel of four plots
par(mfrow=c(2, 2))
## plot goodness of fit results
plot(gf2)
## Check out results
summary(est2)
## See if the MCMLE Converged
ergm::mcmc.diagnostics(est2)
gf.degeneracy
## plot goodness of fit results
plot(gf2)
## See if the MCMLE Converged
ergm::mcmc.diagnostics(est2)
## See if the MCMLE Converged
ergm::mcmc.diagnostics(est2)
## See if the MCMLE Converged
ergm::mcmc.diagnostics(est2)
## See if it’s degenerate
gf.degeneracy <- ergm::gof(est2, GOF=~model)
gf.degeneracy
## How does it fit?
gf2 <- ergm::gof(est2)
## Make a panel of four plots
par(mfrow=c(2, 2))
## plot goodness of fit results
plot(gf2)
## Check out results
summary(est2)
est3 <- ergm::ergm(Senate ~ edges + absdiff("ideol") +
edgecov("dist") +
istar(2) + gwesp(0)
)
## add transitivity
## increase mcmc.samplesize to improve Geweke results
set.seed(45)
est4 <- ergm::ergm(Senate ~ edges + absdiff("ideol") + edgecov("dist") +
istar(2) + triangle,
control=ergm::control.ergm(MCMC.samplesize=10000))
est4
est5 <- ergm::ergm(Senate ~ edges + absdiff("ideol") + edgecov("dist") +
istar(2) + gwesp(0),
control=ergm::control.ergm(MCMC.samplesize=10000))
est5 <- ergm::ergm(Senate ~ edges + absdiff("ideol") + edgecov("dist") +
istar(2) + gwesp(0),
estimate = "MPLE",
control=ergm::control.ergm(MCMC.samplesize=10000))
## See if the MCMLE Converged
mcmc.diagnostics(est5)
## See if the MCMLE Converged
ergm::mcmc.diagnostics(est5)
## See if it’s degenerate
gf.degeneracy <- ergm::gof(est5, GOF=~model)
